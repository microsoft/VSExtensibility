<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net472</TargetFramework>
    <Nullable>enable</Nullable>
    <LangVersion>12</LangVersion>
    <NeutralLanguage>en-US</NeutralLanguage>
    <UseWPF>true</UseWPF>

    <VssdkCompatibleExtension>true</VssdkCompatibleExtension>
    <GeneratePkgDefFile>true</GeneratePkgDefFile>
    <UseCodebase>true</UseCodebase>
    <SignAssembly>True</SignAssembly>
    <!-- Note, this is a new signing key created for this sample. It is safe to publish to a public repo! -->
    <AssemblyOriginatorKeyFile>sgKey.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.VisualStudio.Extensibility.Build" Version="17.14.40254" PrivateAssets="all" />
    <PackageReference Include="Microsoft.VisualStudio.SDK" Version="17.13.40008" ExcludeAssets="runtime" />
  </ItemGroup>

  <ItemGroup>
    <!-- Build Extension and include all files that belong in the VSIX into Container's
         VSIX. Explicitly set the target framework and avoid referencing the Extension's assembly
         since the two projects have different target frameworks. -->
    <ProjectReference Include="..\Extension\Extension.csproj">
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <SkipGetTargetFrameworkProperties>true</SkipGetTargetFrameworkProperties>
      <IncludeInVSIX>true</IncludeInVSIX>
      <IncludeOutputGroupsInVSIX>ExtensionFilesOutputGroup</IncludeOutputGroupsInVSIX>
    </ProjectReference>
  </ItemGroup>

  <ItemGroup>
    <VSIXSourceItem Include="$(BaseOutputPath)..\Extension\$(Configuration)\net8.0-windows8.0\.vsextension\extension.json" VsixSubPath=".vsextension" />
  </ItemGroup>
</Project>
